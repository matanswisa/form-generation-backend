# 🧩 Dynamic Form Backend (FastAPI)

This is the backend server for the **Dynamic Form Generator** project, built with [FastAPI](https://fastapi.tiangolo.com/) and [PostgreSQL](https://www.postgresql.org/). It provides API endpoints to manage dynamic forms, store form submissions, and interact with a PostgreSQL database.

The backend is designed to be flexible and supports two ways to run:
- ✅ **Fully Dockerized** (FastAPI + PostgreSQL)
- ✅ **FastAPI running locally, PostgreSQL running in Docker**

---

## 🚀 Features

- ⚡ High-performance FastAPI framework
- 🐘 PostgreSQL database integration
- 🛠 Environment-based flexible configuration
- 📦 Docker support for easy deployment
- 🔁 Live-reload for local development

---

## 📁 Project Structure
dynamic-form-backend/
├── app/ # FastAPI application source
│ └── main.py # Application entry point
├── Dockerfile # FastAPI Docker image
├── docker-compose.yml # Full stack configuration
├── requirements.txt # Python dependencies
├── .env # Environment variables (create this file)
└── README.md


---

## 📦 Requirements

- Python 3.10+
- Docker + Docker Compose
- `venv` or `virtualenv` for local development

---

## ⚙️ Environment Configuration

Create a `.env` file in the project root:

### ✅ For Docker Compose:

```env
# .env
DB_USER=postgres
DB_PASSWORD=mysecretpassword
DB_NAME=formdb
DB_HOST=db
DB_PORT=5432

DATABASE_URL=postgresql://postgres:mysecretpassword@db:5432/formdb

For Localhost FastAPI add to the env file:
DATABASE_URL_LOCAL_APP=postgresql://postgres:mysecretpassword@localhost:5432/formdb
```
### Run and build the backend application + postgres:
# Start
```docker-compose up --build```

### In case you run the FastAPI on localhost:
```
python3 -m venv venv
source venv/bin/activate

pip install -r requirements.txt

uvicorn app.main:app --reload
```
# Make sure the env file include:
DATABASE_URL_LOCAL_APP=postgresql://postgres:mysecretpassword@localhost:5432/formdb





